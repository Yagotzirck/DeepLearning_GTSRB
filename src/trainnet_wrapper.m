function [trainedNet, info, resizeTestImgs, options] = trainnet_wrapper( ...
    net, ...
    trainImgs, validationImgs, testImgs, ...
    maxEpochs, minibatchSize, initialLearnRate)
%TRAINNET_WRAPPER A wrapper for trainnet(), containing boilerplate code.


%% Resize the images according to the network's input image size
%  (Only width and height, exclude RGB channels).
%  Also, use an augmenter for the training set.

inImgSize = net.Layers(1).InputSize(1:2);
augmenter = imageDataAugmenter( ...
    RandRotation = [-10 10], ...
    RandScale = [0.75 1], ...
    RandXShear = [-3 3], ...
    RandYShear = [-3 3], ...
    RandXTranslation = [-15 15], ...
    RandYTranslation = [-15 15] ...
);
%augmenter ='none';

resizeTrainImgs      =  augmentedImageDatastore( ...
                            inImgSize, trainImgs, ...
                            'DataAugmentation', augmenter ...
);
resizeValidationImgs = augmentedImageDatastore(inImgSize, validationImgs);
resizeTestImgs       = augmentedImageDatastore(inImgSize, testImgs);


%% Configure training options
options = trainingOptions( ...
    "adam", ...
    Metrics="accuracy", ...
    MaxEpochs=maxEpochs, ...
    MiniBatchSize=minibatchSize, ...
    L2Regularization=0.001, ... % Default value = 0.0001
    InitialLearnRate=initialLearnRate, ...
    LearnRateSchedule="cosine", ...
    ValidationData=resizeValidationImgs, ...
    ValidationFrequency=5, ...
    Shuffle="every-epoch", ...
    Plots="training-progress" ...
);


%% Perform training
rng default; % Keep shuffling consistent at each training session

[trainedNet, info] = trainnet( ...
    resizeTrainImgs, ...
    net, ...
    "crossentropy", ...
    options ...
);
end

